第13章 线程安全与锁优化

    13.2 线程安全
        13.2.1 java中的线程安全
            1. 不可变
            2. 绝对线程安全
            3. 相对线程安全
                java API大多数都是相对线程安全
            4. 线程兼容
                是指对象本身不是线程安全的, 但是可以通过在调用端正确的使用同步手段来保证对象在并发环境中
                可以安全的使用.
            5. 线程对立
                无论是否采取同步措施, 都无法在多线程环境中并发使用.
                常见线程对立:
                    Thread.suspend()和Thread.resume();
                    System.setInt(), System.setOut()等

        13.2.2 线程安全的实现方法
            1. 互斥同步
            2. 非阻塞同步
            3. 无同步方案

    13.3 锁优化
        13.3.1 自旋锁与自适应自旋
            所谓自旋锁是为了让线程等待, 执行一个忙循环(自旋), 这项技术就是所谓的自旋锁

        13.3.2 锁消除
            虚拟机即时编译器在运行时, 对一些代码上要求同步, 但被检测到不可能存在共享数据竞争
            的锁进行消除.

        13.3.3 锁粗化
            适当扩大加锁范围

        13.3.4 轻量级锁
        13.3.5 偏向锁
