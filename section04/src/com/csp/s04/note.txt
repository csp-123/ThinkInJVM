第4章 虚拟机性能监控与故障处理工具

    4.2 JDK命令行工具
        4.2.1 jps 虚拟机进程状况工具
            命令用法: jps [options] [hostid]
              options:命令选项，用来对输出格式进行控制
              hostid:指定特定主机，可以是ip地址和域名, 也可以指定具体协议，端口。
              [protocol:][[//]hostname][:port][/servername]

            -p  :仅仅显示VM 标示，不显示jar,class, main参数等信息.
            -m:输出主函数传入的参数. 下的hello 就是在执行程序时从命令行输入的参数
            -l: 输出应用程序主类完整package名称或jar完整名称.
            -v: 列出jvm参数, -Xms20m -Xmx50m是启动程序指定的jvm参数

        4.2.2 jstat 虚拟机统计信息监视工具
            jstat 命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下：
            jstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]

            https://www.jianshu.com/p/213710fb9e40   详细使用细则

        4.2.3 jinfo Java配置信息工具
            jinfo是jdk自带的命令，可以用来查看正在运行的Java应用程序的扩展参数，甚至支持在运行时，修改部分参数。
            通常会先使用jps查看java进程的id，然后使用jinfo查看指定pid的jvm信息.
            jps   #通过jps来查看当前运行状态的虚拟机进程
            查看jvm的参数
            jinfo -flags process_id
            查看java系统参数
            jinfo -sysprops process_id
            虚拟机的这些参数可以通过下面的命令查看：
            java -XX:+PrintFlagsFinal -version | grep manageable
            除了通过启动脚本可以设置参数，PrintGC默认是打开的，因此我们只需要打开PrintGCDetails参数。
            jinfo -flag +PrintGC 27250
            jinfo -flag +PrintGCDetails 27250
            如果需要关闭GC日志的打印，使用下面的命令：
            jinfo -flag -PrintGC 27250
            jinfo -flag -PrintGCDetails 27250　
            查看是否开启了GC日志的打印：
            jinfo -flag PrintGC 27250
            jinfo -flag PrintGCDetails 27250　　

        4.2.4 jmap java内存映像工具
            <no option> 如果使用不带选项参数的jmap打印共享对象映射，将会打印目标虚拟机中加载的每个共享对象的起始地址、映射大小以及共享对象文件的路径全称。这与Solaris的pmap工具比较相似。
            -dump:[live,]format=b,file=<filename> 使用hprof二进制形式,输出jvm的heap内容到文件, live子选项是可选的，假如指定live选项,那么只输出活的对象到文件.
            -finalizerinfo 打印正等候回收的对象的信息.
            -heap 打印heap的概要信息，GC使用的算法，heap的配置及wise heap的使用情况.
            -histo[:live] 打印每个class的实例数目,内存占用,类全名信息. VM的内部类名字开头会加上前缀”*”. 如果live子参数加上后,只统计活的对象数量.
            -permstat 打印classload和jvm heap长久层的信息. 包含每个classloader的名字,活泼性,地址,父classloader和加载的class数量. 另外,内部String的数量和占用内存数也会打印出来.
            -F 强迫.在pid没有响应的时候使用-dump或者-histo参数. 在这个模式下,live子参数无效.
            -h | -help 打印辅助信息
            -J<flag> 传递参数给jmap启动的jvm.
            pid 需要被打印配相信息的java进程id,可以用jps查问

        4.2.5 jhat 虚拟机堆转储快照分析工具
            -J< flag >
            因为 jhat 命令实际上会启动一个JVM来执行, 通过 -J 可以在启动JVM时传入一些启动参数. 例如, -J-Xmx512m 则指定运行 jhat 的Java虚拟机使用的最大堆内存为 512 MB. 如果需要使用多个JVM启动参数,则传入多个 -Jxxxxxx.
            -stack false|true
            关闭对象分配调用栈跟踪(tracking object allocation call stack)。 如果分配位置信息在堆转储中不可用. 则必须将此标志设置为 false. 默认值为 true.
            -refs false|true
            关闭对象引用跟踪(tracking of references to objects)。 默认值为 true. 默认情况下, 返回的指针是指向其他特定对象的对象,如反向链接或输入引用(referrers or incoming references), 会统计/计算堆中的所有对象。
            -port port-number
            设置 jhat HTTP server 的端口号. 默认值 7000。
            -exclude exclude-file
            指定对象查询时需要排除的数据成员列表文件(a file that lists data members that should be excluded from the reachable objects query)。 例如, 如果文件列列出了 java.lang.String.value , 那么当从某个特定对象 Object o 计算可达的对象列表时, 引用路径涉及 java.lang.String.value 的都会被排除。
            -baseline exclude-file
            指定一个基准堆转储(baseline heap dump)。 在两个 heap dumps 中有相同 object ID 的对象会被标记为不是新的(marked as not being new). 其他对象被标记为新的(new). 在比较两个不同的堆转储时很有用。
            -debug int
            设置 debug 级别. 0 表示不输出调试信息。 值越大则表示输出更详细的 debug 信息。
            -version
            启动后只显示版本信息就退出。

        4.2.6 jstack Java堆栈跟踪工具
            -F当’jstack [-l] pid’没有相应的时候强制打印栈信息,如果直接jstack无响应时，用于强制jstack），一般情况不需要使用
            -l长列表. 打印关于锁的附加信息,例如属于java.util.concurrent的ownable synchronizers列表，会使得JVM停顿得长久得多（可能会差很多倍，比如普通的jstack可能几毫秒和一次GC没区别，加了-l 就是近一秒的时间），-l 建议不要用。一般情况不需要使用
            -m打印java和native c/c++框架的所有栈信息.可以打印JVM的堆栈,显示上Native的栈帧，一般应用排查不需要使用
            -h | -help打印帮助信息
            pid 需要被打印配置信息的java进程id,可以用jps查询.

        4.2.7 HSDIS JIT生成代码反汇编

    4.3 JDK的可视化工具
